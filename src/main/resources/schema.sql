CREATE TABLE MOVIE(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  TITLE VARCHAR(64) NOT NULL,
  COUNTRY VARCHAR(64) NOT NULL,
  MOVIELANGUAGE VARCHAR(64) NOT NULL,
  CREATEDYEAR INT NOT NULL,
  FORCHILDREN BIT NOT NULL,
);

CREATE TABLE GENRE(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  GENRENAME VARCHAR(64) NOT NULL,
);

CREATE TABLE MOVIE_USER(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  FIRSTNAME VARCHAR(64) NOT NULL,
  LASTNAME VARCHAR(64) NOT NULL,
  GENDER CHAR(1),
  AGE INT,
  USERNAME VARCHAR(64) NOT NULL,
  COUNTRY VARCHAR(64),
  EMAILADDRESS VARCHAR(64) NOT NULL,
  PASSWORD VARCHAR(64) NOT NULL
);

CREATE TABLE DIRECTOR(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  FIRSTNAME VARCHAR(64) NOT NULL,
  LASTNAME VARCHAR(64) NOT NULL,
  GENDER CHAR(1) NOT NULL,
  AGE INT NOT NULL,
);

CREATE TABLE ACTOR(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  FIRSTNAME VARCHAR(64) NOT NULL,
  LASTNAME VARCHAR(64) NOT NULL,
  GENDER CHAR(1) NOT NULL,
  AGE INT NOT NULL,
);

CREATE TABLE MOVIE_HAS_DIRECTOR(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  MOVIEID BIGINT NOT NULL,
  DIRECTORID BIGINT NOT NULL,
);

CREATE TABLE MOVIE_HAS_ACTOR(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  MOVIEID BIGINT NOT NULL,
  ACTORID BIGINT NOT NULL,
);

CREATE TABLE MOVIE_HAS_GENRE(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  MOVIEID BIGINT NOT NULL,
  GENREID BIGINT NOT NULL,
);

CREATE TABLE FILM_WISHLIST(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  MOVIEID BIGINT NOT NULL,
  USERID BIGINT NOT NULL,
);

CREATE TABLE USER_HAS_SEEN_FILM (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  MOVIEID BIGINT NOT NULL,
  USERID BIGINT NOT NULL,
  RATING INT NOT NULL,
);

ALTER TABLE USER_HAS_SEEN_FILM ADD FOREIGN KEY (MOVIEID) REFERENCES MOVIE(ID);
ALTER TABLE USER_HAS_SEEN_FILM ADD FOREIGN KEY (USERID) REFERENCES MOVIE_USER(ID);

ALTER TABLE MOVIE_HAS_ACTOR ADD FOREIGN KEY (MOVIEID) REFERENCES MOVIE(ID);
ALTER TABLE MOVIE_HAS_ACTOR ADD FOREIGN KEY (ACTORID) REFERENCES ACTOR(ID);

ALTER TABLE MOVIE_HAS_DIRECTOR ADD FOREIGN KEY (MOVIEID) REFERENCES MOVIE(ID);
ALTER TABLE MOVIE_HAS_DIRECTOR ADD FOREIGN KEY (DIRECTORID) REFERENCES DIRECTOR(ID);

ALTER TABLE FILM_WISHLIST ADD FOREIGN KEY (MOVIEID) REFERENCES MOVIE(ID);
ALTER TABLE FILM_WISHLIST ADD FOREIGN KEY (USERID) REFERENCES MOVIE_USER(ID);

ALTER TABLE MOVIE_HAS_GENRE ADD FOREIGN KEY (MOVIEID) REFERENCES MOVIE(ID);
ALTER TABLE MOVIE_HAS_GENRE ADD FOREIGN KEY (GENREID) REFERENCES GENRE(ID);
